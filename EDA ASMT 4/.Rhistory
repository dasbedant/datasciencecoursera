install.packages("swirl")
library(swirl)
install_from_swirl("R Programming")
cube <- function(x, n) {
x^3
}
x
cube(3)
The following code will produce a warning in R.
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
x <- 1:10
if(x > 5) {
x <- 0
}
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
f(3)
z
g
pollutantmean <-function(directory, pollutant, id=1:332)  {
## 'directory' is a character vector of length 1 indicating
## the location of the CSV files
## 'pollutant' is a character vector of lenght 1 indicating
## the name of the pollutant for which we will calculate the
## the mean; either "sulfate" or "nitrate".
## 'id' is an integer vector indicating the monitor ID numbers
## to be used.
## Return the mean of the poolutant across all monitors list
## in the 'id' vector(ignoring NA values)
mypollutantdata <- read.csv(directory)
mypollutantdata
}
getwd()
dir()
pollutantmean("C:/Users/user-pc/Downloads/specdata")
pollutantmean("C:/Users/user-pc/Downloads/specdata/001.csv")
pollutantmean("C:/Users/user-pc/Downloads/specdata/001.csv")
list.files()
list.files("C:/Users/user-pc/Downloads/specdata")
list("C:/Users/user-pc/Downloads/specdata")
q()
q()
q()
f <- function(vector = 1:3){ vector* 5}
f()
f()+f(c(1,1,1))
f(c(1,1,1))
f(c(10,20,30))
f() + f(c(10,20,30))
f()+f(c(1,1,1))
getwd()
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
library(swirl)
swirl()
0
swirl()
0
install_from_swirl("Getting and Cleaning Data")
swirl()
swirl()
swirl()
chooseCRANmirror()
swirl()
mydf <- read.csv("path2csv", stringsAsFactors = FALSE )
dir
dir()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE )
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch : country)
select(cran, country :r_arch)
print(cran)
select(cran, everything)
print(cran)
select(cran, X:ip_id)
info()
skip()
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country =="IN")
filter(cran, size > 100500 , r_os == "linux-gru")
filter(cran, size (>) 100500 , r_os == "linux-gru")
filter(cran, size > 100500 , r_os == "linux-gnu")
is.na(3,5,NA, 10)
is.na(c(3,5,NA, 10))
!is.na(c(3,5,NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size /2^20 )
mutate(cran3, size_gb = size_mb /2^10 )
mutate(cran3, size_gb = size_mb /2^10 )
mutate(cran3, size_gb = size_mb /2^10 )
skip
mutate(cran3, size_mb = size/2^20, size_gb = Size_mb /2^10)
mutate(cran3, size_mb = size/2^20, size_gb = size_mb /2^10)
mutate(cran3, correct_size = size-1000)
mutate(cran3, correct_size = size+1000)
summarise(cran, avg_bytes = mean(size))
summarize(cran, avg_bytes = mean(size))
q()
library(swirl)
library(swirl)
swirl()
library(xlsx)
library(xml)
library(XML)
utils:::menuInstallLocal()
utils:::menuInstallPkgs()
q()
library(jpeg)
library(data.table)
library(dplyr)
library(Hmisc)
swirl()
library(swirl)
swirl()
library(dplyr)
cran
bye
bye()
swirl()
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by()
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, means(size))
summarize(by_package, mean(size))
swirl()
ye()
bye()
swirl()
library(swirl)
swirl()
cmat
point(cx, cy, col=c("red","orange", "purple"), pch =3, cex=2, lwd=2)
points(cx, cy, col=c("red","orange", "purple"), pch =3, cex=2, lwd=2)
mdist(x,y, cx,cy)
min(distTmp,2,which.min())
min(distTmp,2,which.min(x))
apply(distmp, 2, which.min)
apply(disTmp, 2, which.min)
apply(distTmp, 2, which.min)
points(x,y,pch= 19, cex=2, col =cols1[newClust])
tapply(x, newClust, mean)
tapply(y, newClust, mean)
points(newCx, newCy, col=cols1, pch=8, cex=2, lwd=2)
mdist(x,y, newCx, newCy)
0
bye
bye()
swirl()
library(swirl)
swirl()
dates <-pm1$Date
dates <-pm1$Date
pm1
head(pm1)
dates <- pm1$V4
exit
bye
setwd("C:/Users/user-pc/Documents/Bedant Data Science/EDA ASMT 4")
ls()
library(ggplot2)
library(dplyr)
PM25data <- readRDS("summarySCC_PM25.rds")
SCCdata <- readRDS("Source_Classification_Code.rds")
BLT <- subset(PM25data, fips == '24510' & type == 'ON-ROAD')
LA <- subset(PM25data, fips == '06037' & type == 'ON-ROAD')
BLTsub <- aggregate(BLT[, 'Emissions'], by=list(BLT$year), sum)
colnames(BLTsub) <- c('year', 'PM25')
BLTsub$State <- paste(rep('MD', 4))
LAsub <- aggregate(LA[, 'Emissions'], by=list(LA$year), sum)
colnames(LAsub) <- c('year', 'PM25')
LAsub$State <- paste(rep('CA', 4))
YearlYAggregate <- as.data.frame(rbind(BLTsub, LAsub))
head(YearlYAggregate)
png('plot6.png')
ggplot(data=YearlYAggregate, aes(x=year, y=PM25 )) +
geom_bar(aes(fill= year)) + guides(fill=FALSE) +
facet_grid(.~State, scales = "free",space="free") +
ggtitle('Total Emissions of Motor Vehicle Sources\nLos Angeles County, California vs. Baltimore City, Maryland') +
ylab('PM25')+ xlab('Year') + theme(legend.position='none') +
geom_text(aes(label=round(YearlYAggregate$PM25,0), size=1, hjust=0.5, vjust=-1))
ggplot(data=YearlYAggregate, aes(x=year, y=PM25 )) +
geom_bar(aes(fill= FALSE)) + guides(fill=FALSE) +
facet_grid(.~State, scales = "free",space="free") +
ggtitle('Total Emissions of Motor Vehicle Sources\nLos Angeles County, California vs. Baltimore City, Maryland') +
ylab('PM25')+ xlab('Year') + theme(legend.position='none') +
geom_text(aes(label=round(YearlYAggregate$PM25,0), size=1, hjust=0.5, vjust=-1))
ggplot(data=YearlYAggregate, aes(x=year, y=PM25 )) +
geom_bar(aes(fill= PM25)) + guides(fill=FALSE) +
facet_grid(.~State, scales = "free",space="free") +
ggtitle('Total Emissions of Motor Vehicle Sources\nLos Angeles County, California vs. Baltimore City, Maryland') +
ylab('PM25')+ xlab('Year') + theme(legend.position='none') +
geom_text(aes(label=round(YearlYAggregate$PM25,0), size=1, hjust=0.5, vjust=-1))
?stat_count()
ggplot(data=YearlYAggregate, aes(x=year, y=PM25 )) +
geom_bar(aes(fill= year, stat="identity")) + guides(fill=FALSE) +
facet_grid(.~State, scales = "free",space="free") +
ggtitle('Total Emissions of Motor Vehicle Sources\nLos Angeles County, California vs. Baltimore City, Maryland') +
ylab('PM25')+ xlab('Year') + theme(legend.position='none') +
geom_text(aes(label=round(YearlYAggregate$PM25,0), size=1, hjust=0.5, vjust=-1))
ggplot(data=YearlYAggregate, aes(x=year, y=PM25 )) +
geom_bar(aes(y= PM25, stat="identity")) + guides(fill=FALSE) +
facet_grid(.~State, scales = "free",space="free") +
ggtitle('Total Emissions of Motor Vehicle Sources\nLos Angeles County, California vs. Baltimore City, Maryland') +
ylab('PM25')+ xlab('Year') + theme(legend.position='none') +
geom_text(aes(label=round(YearlYAggregate$PM25,0), size=1, hjust=0.5, vjust=-1))
ggplot(data=YearlYAggregate, aes(x=year, y=PM25 )) +
geom_bar() + guides(fill=FALSE) +
facet_grid(.~State, scales = "free",space="free") +
ggtitle('Total Emissions of Motor Vehicle Sources\nLos Angeles County, California vs. Baltimore City, Maryland') +
ylab('PM25')+ xlab('Year') + theme(legend.position='none') +
geom_text(aes(label=round(YearlYAggregate$PM25,0), size=1, hjust=0.5, vjust=-1))
dev.off()
ggplot(data=YearlYAggregate, aes(x=year, y=PM25 )) +
geom_bar(stat="identity") + guides(fill=FALSE) +
facet_grid(.~State, scales = "free",space="free") +
ggtitle('Total Emissions of Motor Vehicle Sources\nLos Angeles County, California vs. Baltimore City, Maryland') +
ylab('PM25')+ xlab('Year') + theme(legend.position='none') +
geom_text(aes(label=round(YearlYAggregate$PM25,0), size=1, hjust=0.5, vjust=-1))
head(YearlYAggregate)
